plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'org.owasp.dependencycheck' version '10.0.3'
}

group = 'uk.gov.hmcts.reform.dev'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // persistence + validation
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
    testImplementation 'org.testcontainers:postgresql:1.20.3'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

// Modern Application plugin DSL (replaces deprecated mainClassName)
application {
    mainClass = 'uk.gov.hmcts.reform.dev.Application'
}

// Ensure JUnit Platform is used for all test tasks (Gradle 8+)
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

// Code quality plugins
checkstyle {
    toolVersion = '10.17.0'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    toolVersion = '6.55.0'
    ignoreFailures = true
    consoleOutput = true
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
}

// Jacoco configuration
jacoco {
    toolVersion = '0.8.12'
}

tasks.jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

// OWASP dependency-check configuration
dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = file("${rootDir}/config/owasp/suppressions.xml")
}

// Conditional workaround for resource duplicates (only if the task exists)
tasks.matching { it.name == "processSmokeTestResources" }.configureEach {
    duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
}

// Wrapper task
wrapper {
    gradleVersion = '8.10.2'
    distributionType = Wrapper.DistributionType.ALL
}
